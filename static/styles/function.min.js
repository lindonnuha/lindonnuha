var TxtType = function (t, i, e) {
  (this.toRotate = i),
    (this.el = t),
    (this.loopNum = 0),
    (this.period = parseInt(e, 10) || 2e3),
    (this.txt = ""),
    this.tick(),
    (this.isDeleting = !1);
};
function hireMeFunction() {
  alert("Thank you for hiring me :)");
}
(TxtType.prototype.tick = function () {
  var t = this.loopNum % this.toRotate.length,
    i = this.toRotate[t];
  this.isDeleting
    ? (this.txt = i.substring(0, this.txt.length - 1))
    : (this.txt = i.substring(0, this.txt.length + 1)),
    (this.el.innerHTML = '<span class="wrap">' + this.txt + "</span>");
  var e = this,
    n = 200 - 100 * Math.random();
  this.isDeleting && (n /= 2),
    this.isDeleting || this.txt !== i
      ? this.isDeleting &&
        "" === this.txt &&
        ((this.isDeleting = !1), this.loopNum++, (n = 500))
      : ((n = this.period), (this.isDeleting = !0)),
    setTimeout(function () {
      e.tick();
    }, n);
}),
  (window.onload = function () {
    for (
      var t = document.getElementsByClassName("typewrite"), i = 0;
      i < t.length;
      i++
    ) {
      var e = t[i].getAttribute("data-type"),
        n = t[i].getAttribute("data-period");
      e && new TxtType(t[i], JSON.parse(e), n);
    }
    var s = document.createElement("style");
    (s.type = "text/css"),
      (s.innerHTML =
        ".typewrite > .wrap { border-right: 0.1em solid #ffec17; animation: caret 0.75s steps(1) infinite;}"),
      document.body.appendChild(s);
  });
var mybutton = document.getElementById("myBtn");
function scrollFunction() {
  // console.log(typeof mybutton);
  document.body.scrollTop > 100 || document.documentElement.scrollTop > 100
    ? (mybutton.style.display = "block")
    : (mybutton.style.display = "none");
}
function topFunction() {
  (document.body.scrollTop = 0), (document.documentElement.scrollTop = 0);
}
(window.onscroll = function () {
  scrollFunction();
}),
  $(document).ready(function () {
    $("form").submit(function () {
      $("#sending").css("display", "block");
    });
  });
document.addEventListener("DOMContentLoaded", function () {
  var tooltipTriggerList = [].slice.call(
    document.querySelectorAll('[data-toggle="tooltip"]')
  );
  var tooltipList = tooltipTriggerList.map(function (element) {
    new bootstrap.Tooltip(element, {
      delay: { show: 500, hide: 0 },
    });
    return new bootstrap.Tooltip(element);
  });
});
